using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Publishing_house
{
    public partial class FCompositions : Form
    {
        public DCompositions _data;

        public FCompositions()
        {
            InitializeComponent();
            _data = new DCompositions();

            dataGridView.TopLeftHeaderCell.Value = "Код";
        }

        private void PrintData()
        {
            dataGridView.Rows.Clear();
            comboBoxItems.Items.Clear();

            int i = 0;
            foreach(Composition d in _data.Data)
            {
                dataGridView.Rows.Add(d.ToDataGridView);
                dataGridView.Rows[i++].HeaderCell.Value = d.Id.ToString();

                comboBoxItems.Items.Add(d.Title);
            }
        }

        private void назадToolStripMenuItem_Click(object sender, EventArgs e)
        {
            FMainMenu form = new FMainMenu();
            form.Show();
            this.Hide();
        }

        private void выходToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Продолжить выход?", "Внимание!", MessageBoxButtons.YesNo) != DialogResult.Yes)
                return;

            Application.Exit();
        }

        private void FCompositions_Load(object sender, EventArgs e)
        {
            try
            {
                if (_data.Query_Load())
                {
                    PrintData();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Сообщение: {ex.Message}", "Вызвано исключение!");
            }
            finally
            {
                _data.CloseConnection();
            }
        }

        private void buttonAdd_Click(object sender, EventArgs e)
        {
            if(textBoxAutor.IsEmptyText() || textBoxDescription.IsEmptyText() ||
                textBoxGanre.IsEmptyText() || textBoxTitle.IsEmptyText())
            {
                MessageBox.Show("Не все поля введены!","Внимание!");
                return;
            }

            try
            {
                Composition d = new Composition();
                d.Title = textBoxTitle.Text;
                d.Description = textBoxDescription.Text;
                d.Autor = textBoxAutor.Text;
                d.Ganre = textBoxGanre.Text;

                if (_data.Query_Add(d))
                {
                    MessageBox.Show("Данные добавлены!", "Внимание!");
                    PrintData();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Сообщение: {ex.Message}","Вызвано исключение!");
            }
        }

        private void buttonEdit_Click(object sender, EventArgs e)
        {
            if(comboBoxItems.SelectedIndex == -1)
            {
                MessageBox.Show("Выберите элемент!","Внимание!");
                return; 
            }

            if (textBoxAutor.IsEmptyText() || textBoxDescription.IsEmptyText() ||
               textBoxGanre.IsEmptyText() || textBoxTitle.IsEmptyText())
            {
                MessageBox.Show("Не все поля введены!", "Внимание!");
                return;
            }

            try
            {
                Composition d = _data[comboBoxItems.SelectedIndex];
                d.Title = textBoxTitle.Text;
                d.Description = textBoxDescription.Text;
                d.Autor = textBoxAutor.Text;
                d.Ganre = textBoxGanre.Text;

                if (_data.Query_Update(d))
                {
                    MessageBox.Show("Данные обновлены!", "Внимание!");
                    PrintData();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Сообщение: {ex.Message}", "Вызвано исключение!");
            }
        }

        private void buttonDelete_Click(object sender, EventArgs e)
        {
            if (comboBoxItems.SelectedIndex == -1)
            {
                MessageBox.Show("Выберите элемент!", "Внимание!");
                return;
            }

            try
            {
                int id = _data[comboBoxItems.SelectedIndex].Id;

                if (_data.Query_Delete(id))
                {
                    MessageBox.Show("Данные удалены!", "Внимание!");
                    PrintData();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Сообщение: {ex.Message}", "Вызвано исключение!");
            }
        }

        private void comboBoxItems_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBoxItems.SelectedIndex == -1)
                return;

            try
            {
                int index = comboBoxItems.SelectedIndex;
                textBoxAutor.Text = _data[index].Autor;
                textBoxDescription.Text = _data[index].Description;
                textBoxGanre.Text = _data[index].Ganre;
                textBoxTitle.Text = _data[index].Title;
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Сообщение: {ex.Message}", "Вызвано исключение!");
            }
        }
    }
}
